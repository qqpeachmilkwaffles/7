def func1(arg1, arg2):
    var52 = var5(arg2, arg1)
    var53 = arg1 - var52
    if var53 < var53:
        var54 = var52 & arg2
    else:
        var54 = (556 & arg2 ^ var53) + var53
    var55 = var52 - var52
    var56 = var52 ^ -1564911254
    var57 = ((var55 + var52) - var53) | arg1
    var58 = arg2 - (-2092140372 - var57 + arg2)
    var59 = (var56 - arg1) - -280
    var60 = var59 + var58
    var61 = (var60 & var57 | 537) - var57
    var62 = -195 & var56
    var63 = var60 & var61
    result = ((var56 + var55) & (var63 ^ var58) + ((var63 | var57 | 246) | var56 & arg1)) & var53 ^ var55 + arg2
    return result
def func4(arg6, arg7):
    var27 = func5(arg6, arg7)
    if arg6 < arg7:
        var32 = class8()
    else:
        var32 = class10()
    for var33 in xrange(1):
        var32.func9(arg7, var33)
    var34 = arg7 - arg7 & var27
    if arg6 < var34:
        var35 = var34 - arg6 ^ var27
    else:
        var35 = arg6 + -421954626
    var36 = (-557102241 | -727) - arg6 | var27
    var37 = -822 + arg6
    if var34 < arg6:
        var38 = (arg6 + (var34 ^ var27)) ^ arg6
    else:
        var38 = -293619854 + var27
    var39 = 32 ^ arg7
    var40 = -661958513 - var36 - var27
    var41 = var27 ^ (var27 ^ var39) | -205
    var42 = var40 + 814 | arg7 + var36
    var43 = (arg7 & var41) & var36
    if arg7 < arg7:
        var44 = 979 + (var34 ^ var43 ^ var27)
    else:
        var44 = -552 + var41
    if var41 < var42:
        var45 = var37 - var42
    else:
        var45 = (59 - -943 - var40) - var36
    var46 = var39 & var36 ^ var36 + var42
    var47 = var40 | arg7 & var40
    var48 = arg7 | var42 + -266 - var43
    var49 = var37 - (var39 & var27 | var48)
    var50 = var41 & arg6
    var51 = var43 & var39 & var34 ^ arg6
    result = var41 - var27 + arg7
    return result
class class10(object):
    def func9(self, arg30, arg31):
        result = ((((1 + arg31 & -20607629) & arg31) | -1667187689) ^ arg31) & arg30
        return result
class class8(class10):
    def func9(self, arg28, arg29):
        return 0
def func5(arg8, arg9):
    var14 = func6(arg9, arg8)
    var21 = func7(arg8, var14)
    var22 = arg8 ^ -288355484 | arg8
    var23 = -608 - var14
    var24 = var23 - var23 - -68 | 2060512961 - var23 & 1152209753
    var25 = 739 - arg9
    var26 = var25 - (var21 | (arg9 | var22))
    result = var21 | arg8 ^ 740160494 | ((var25 & -2101128923) ^ -1124184161 + var24) - -909
    return result
def func7(arg15, arg16):
    var17 = arg16 + (396487874 ^ (-1636131859 - -343)) ^ (560 | arg15 | arg15 - -60) ^ arg15
    var18 = var17 - (arg15 | 890 ^ (arg15 | arg15 & ((arg15 - (arg16 + 800 & arg16 & arg16 + arg15) + arg15) - (-1820587815 ^ -158155215 | -671))) | 104 ^ (-271191316 + arg16 ^ -874) ^ var17 + var17) & arg16
    var19 = arg15 ^ var18
    var20 = var17 & (var17 & 1970718145) ^ arg16 + var17
    result = var20 ^ var20
    return result
def func6(arg10, arg11):
    var12 = 0
    for var13 in xrange(16):
        var12 += arg11 | 2 - 1
    return var12
def func3():
    closure = [-1]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var52 = var5(arg2, arg1)
    var53 = arg1 - var52
    if var53 < var53:
        var54 = var52 & arg2
    else:
        var54 = (556 & arg2 ^ var53) + var53
    var55 = var52 - var52
    var56 = var52 ^ -1564911254
    var57 = ((var55 + var52) - var53) | arg1
    var58 = arg2 - (-2092140372 - var57 + arg2)
    var59 = (var56 - arg1) - -280
    var60 = var59 + var58
    var61 = (var60 & var57 | 537) - var57
    var62 = -195 & var56
    var63 = var60 & var61
    result = ((var56 + var55) & (var63 ^ var58) + ((var63 | var57 | 246) | var56 & arg1)) & var53 ^ var55 + arg2
    return result
def func4(arg6, arg7):
    var27 = func5(arg6, arg7)
    if arg6 < arg7:
        var32 = class8()
    else:
        var32 = class10()
    for var33 in xrange(1):
        var32.func9(arg7, var33)
    var34 = arg7 - arg7 & var27
    if arg6 < var34:
        var35 = var34 - arg6 ^ var27
    else:
        var35 = arg6 + -421954626
    var36 = (-557102241 | -727) - arg6 | var27
    var37 = -822 + arg6
    if var34 < arg6:
        var38 = (arg6 + (var34 ^ var27)) ^ arg6
    else:
        var38 = -293619854 + var27
    var39 = 32 ^ arg7
    var40 = -661958513 - var36 - var27
    var41 = var27 ^ (var27 ^ var39) | -205
    var42 = var40 + 814 | arg7 + var36
    var43 = (arg7 & var41) & var36
    if arg7 < arg7:
        var44 = 979 + (var34 ^ var43 ^ var27)
    else:
        var44 = -552 + var41
    if var41 < var42:
        var45 = var37 - var42
    else:
        var45 = (59 - -943 - var40) - var36
    var46 = var39 & var36 ^ var36 + var42
    var47 = var40 | arg7 & var40
    var48 = arg7 | var42 + -266 - var43
    var49 = var37 - (var39 & var27 | var48)
    var50 = var41 & arg6
    var51 = var43 & var39 & var34 ^ arg6
    result = var41 - var27 + arg7
    return result
class class10(object):
    def func9(self, arg30, arg31):
        result = ((((1 + arg31 & -20607629) & arg31) | -1667187689) ^ arg31) & arg30
        return result
class class8(class10):
    def func9(self, arg28, arg29):
        return 0
def func5(arg8, arg9):
    var14 = func6(arg9, arg8)
    var21 = func7(arg8, var14)
    var22 = arg8 ^ -288355484 | arg8
    var23 = -608 - var14
    var24 = var23 - var23 - -68 | 2060512961 - var23 & 1152209753
    var25 = 739 - arg9
    var26 = var25 - (var21 | (arg9 | var22))
    result = var21 | arg8 ^ 740160494 | ((var25 & -2101128923) ^ -1124184161 + var24) - -909
    return result
def func7(arg15, arg16):
    var17 = arg16 + (396487874 ^ (-1636131859 - -343)) ^ (560 | arg15 | arg15 - -60) ^ arg15
    var18 = var17 - (arg15 | 890 ^ (arg15 | arg15 & ((arg15 - (arg16 + 800 & arg16 & arg16 + arg15) + arg15) - (-1820587815 ^ -158155215 | -671))) | 104 ^ (-271191316 + arg16 ^ -874) ^ var17 + var17) & arg16
    var19 = arg15 ^ var18
    var20 = var17 & (var17 & 1970718145) ^ arg16 + var17
    result = var20 ^ var20
    return result
def func6(arg10, arg11):
    var12 = 0
    for var13 in xrange(16):
        var12 += arg11 | 2 - 1
    return var12
def func3():
    closure = [-1]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var52 = var5(arg2, arg1)
    var53 = arg1 - var52
    if var53 < var53:
        var54 = var52 & arg2
    else:
        var54 = (556 & arg2 ^ var53) + var53
    var55 = var52 - var52
    var56 = var52 ^ -1564911254
    var57 = ((var55 + var52) - var53) | arg1
    var58 = arg2 - (-2092140372 - var57 + arg2)
    var59 = (var56 - arg1) - -280
    var60 = var59 + var58
    var61 = (var60 & var57 | 537) - var57
    var62 = -195 & var56
    var63 = var60 & var61
    result = ((var56 + var55) & (var63 ^ var58) + ((var63 | var57 | 246) | var56 & arg1)) & var53 ^ var55 + arg2
    return result
def func4(arg6, arg7):
    var27 = func5(arg6, arg7)
    if arg6 < arg7:
        var32 = class8()
    else:
        var32 = class10()
    for var33 in xrange(1):
        var32.func9(arg7, var33)
    var34 = arg7 - arg7 & var27
    if arg6 < var34:
        var35 = var34 - arg6 ^ var27
    else:
        var35 = arg6 + -421954626
    var36 = (-557102241 | -727) - arg6 | var27
    var37 = -822 + arg6
    if var34 < arg6:
        var38 = (arg6 + (var34 ^ var27)) ^ arg6
    else:
        var38 = -293619854 + var27
    var39 = 32 ^ arg7
    var40 = -661958513 - var36 - var27
    var41 = var27 ^ (var27 ^ var39) | -205
    var42 = var40 + 814 | arg7 + var36
    var43 = (arg7 & var41) & var36
    if arg7 < arg7:
        var44 = 979 + (var34 ^ var43 ^ var27)
    else:
        var44 = -552 + var41
    if var41 < var42:
        var45 = var37 - var42
    else:
        var45 = (59 - -943 - var40) - var36
    var46 = var39 & var36 ^ var36 + var42
    var47 = var40 | arg7 & var40
    var48 = arg7 | var42 + -266 - var43
    var49 = var37 - (var39 & var27 | var48)
    var50 = var41 & arg6
    var51 = var43 & var39 & var34 ^ arg6
    result = var41 - var27 + arg7
    return result
class class10(object):
    def func9(self, arg30, arg31):
        result = ((((1 + arg31 & -20607629) & arg31) | -1667187689) ^ arg31) & arg30
        return result
class class8(class10):
    def func9(self, arg28, arg29):
        return 0
def func5(arg8, arg9):
    var14 = func6(arg9, arg8)
    var21 = func7(arg8, var14)
    var22 = arg8 ^ -288355484 | arg8
    var23 = -608 - var14
    var24 = var23 - var23 - -68 | 2060512961 - var23 & 1152209753
    var25 = 739 - arg9
    var26 = var25 - (var21 | (arg9 | var22))
    result = var21 | arg8 ^ 740160494 | ((var25 & -2101128923) ^ -1124184161 + var24) - -909
    return result
def func7(arg15, arg16):
    var17 = arg16 + (396487874 ^ (-1636131859 - -343)) ^ (560 | arg15 | arg15 - -60) ^ arg15
    var18 = var17 - (arg15 | 890 ^ (arg15 | arg15 & ((arg15 - (arg16 + 800 & arg16 & arg16 + arg15) + arg15) - (-1820587815 ^ -158155215 | -671))) | 104 ^ (-271191316 + arg16 ^ -874) ^ var17 + var17) & arg16
    var19 = arg15 ^ var18
    var20 = var17 & (var17 & 1970718145) ^ arg16 + var17
    result = var20 ^ var20
    return result
def func6(arg10, arg11):
    var12 = 0
    for var13 in xrange(16):
        var12 += arg11 | 2 - 1
    return var12
def func3():
    closure = [-1]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var52 = var5(arg2, arg1)
    var53 = arg1 - var52
    if var53 < var53:
        var54 = var52 & arg2
    else:
        var54 = (556 & arg2 ^ var53) + var53
    var55 = var52 - var52
    var56 = var52 ^ -1564911254
    var57 = ((var55 + var52) - var53) | arg1
    var58 = arg2 - (-2092140372 - var57 + arg2)
    var59 = (var56 - arg1) - -280
    var60 = var59 + var58
    var61 = (var60 & var57 | 537) - var57
    var62 = -195 & var56
    var63 = var60 & var61
    result = ((var56 + var55) & (var63 ^ var58) + ((var63 | var57 | 246) | var56 & arg1)) & var53 ^ var55 + arg2
    return result
def func4(arg6, arg7):
    var27 = func5(arg6, arg7)
    if arg6 < arg7:
        var32 = class8()
    else:
        var32 = class10()
    for var33 in xrange(1):
        var32.func9(arg7, var33)
    var34 = arg7 - arg7 & var27
    if arg6 < var34:
        var35 = var34 - arg6 ^ var27
    else:
        var35 = arg6 + -421954626
    var36 = (-557102241 | -727) - arg6 | var27
    var37 = -822 + arg6
    if var34 < arg6:
        var38 = (arg6 + (var34 ^ var27)) ^ arg6
    else:
        var38 = -293619854 + var27
    var39 = 32 ^ arg7
    var40 = -661958513 - var36 - var27
    var41 = var27 ^ (var27 ^ var39) | -205
    var42 = var40 + 814 | arg7 + var36
    var43 = (arg7 & var41) & var36
    if arg7 < arg7:
        var44 = 979 + (var34 ^ var43 ^ var27)
    else:
        var44 = -552 + var41
    if var41 < var42:
        var45 = var37 - var42
    else:
        var45 = (59 - -943 - var40) - var36
    var46 = var39 & var36 ^ var36 + var42
    var47 = var40 | arg7 & var40
    var48 = arg7 | var42 + -266 - var43
    var49 = var37 - (var39 & var27 | var48)
    var50 = var41 & arg6
    var51 = var43 & var39 & var34 ^ arg6
    result = var41 - var27 + arg7
    return result
class class10(object):
    def func9(self, arg30, arg31):
        result = ((((1 + arg31 & -20607629) & arg31) | -1667187689) ^ arg31) & arg30
        return result
class class8(class10):
    def func9(self, arg28, arg29):
        return 0
def func5(arg8, arg9):
    var14 = func6(arg9, arg8)
    var21 = func7(arg8, var14)
    var22 = arg8 ^ -288355484 | arg8
    var23 = -608 - var14
    var24 = var23 - var23 - -68 | 2060512961 - var23 & 1152209753
    var25 = 739 - arg9
    var26 = var25 - (var21 | (arg9 | var22))
    result = var21 | arg8 ^ 740160494 | ((var25 & -2101128923) ^ -1124184161 + var24) - -909
    return result
def func7(arg15, arg16):
    var17 = arg16 + (396487874 ^ (-1636131859 - -343)) ^ (560 | arg15 | arg15 - -60) ^ arg15
    var18 = var17 - (arg15 | 890 ^ (arg15 | arg15 & ((arg15 - (arg16 + 800 & arg16 & arg16 + arg15) + arg15) - (-1820587815 ^ -158155215 | -671))) | 104 ^ (-271191316 + arg16 ^ -874) ^ var17 + var17) & arg16
    var19 = arg15 ^ var18
    var20 = var17 & (var17 & 1970718145) ^ arg16 + var17
    result = var20 ^ var20
    return result
def func6(arg10, arg11):
    var12 = 0
    for var13 in xrange(16):
        var12 += arg11 | 2 - 1
    return var12
def func3():
    closure = [-1]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
